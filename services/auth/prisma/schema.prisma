// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String          @id @default(cuid())
  role         String          @default("user")
  email        String          @unique
  password     String
  username     String          @unique
  name         String
  profilePic   String?
  mobileNumber String?         @unique @map("mobile_number")
  salt         String?
  createdAt    DateTime        @default(now())
  updatedAt    DateTime        @updatedAt
  communityIds String[]
  isVerified   Boolean         @default(false) @map("verified")
  resetTokens  ResetPassword[]
}

model Otp {
  id        String   @id @default(uuid())
  email     String   @unique
  otp       Int
  expiresIn DateTime @map("expires_in")
  updatedAt DateTime @updatedAt @map("updated_at")
  createdAt DateTime @default(now()) @map("created_at")
}

model ResetPassword {
  id        String   @id @default(uuid())
  userId    String   @map("user_id")
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  token     String   @unique
  expiresAt DateTime @map("expires_at")
  createdAt DateTime @default(now()) @map("created_at")
}
